<?php

namespace Bacloo\PaymentBundle\Entity;

/**
 * PaymentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaymentRepository extends \Doctrine\ORM\EntityRepository
{	
    public function paymentadmin($dstart, $dend)
    {
		$qb = $this->createQueryBuilder('c');
        $qb->where('c.date <= :today')
		   ->setParameter('today', $dend)
		   ->andWhere('c.date >= :dtsart')
		   ->setParameter('dtsart', $dstart)
		   ->orderBy('c.date', 'desc');                 
        return $qb->getQuery()->getArrayResult();
    }
	
    public function ventespackdumois()//Pour calculer le CA du mois
    {
		$qb = $this->createQueryBuilder('c');
        $qb->select('SUM(c.totalAmount) as careal'); 
        $qb->where('YEARMONTH(c.date) = :today')
		   ->setParameter('today', date('Ym'));
                 
        return $qb->getQuery()->getSingleScalarResult();
    }
	
    public function comptepackdumois()//Pour calculer le CA du mois
    {
		$qb = $this->createQueryBuilder('c');
        $qb->select('COUNT(c.id) as comptepack'); 
        $qb->where('YEARMONTH(c.date) = :today')
		   ->setParameter('today', date('Ym',strtotime(date('Y-m-d'))));
                 
        return $qb->getQuery()->getSingleScalarResult();
    }
	
    public function capacks($dStart, $dEnd)//Pour calculer le CA du mois
    {
		$qb = $this->createQueryBuilder('c');
        $qb->select('SUM(c.totalAmount) as careal, YEARMONTH(c.date) as datecrea'); 
        $qb->where('YEARMONTH(c.date) <= :today')
		   ->setParameter('today', date('Ym',strtotime($dEnd)))
		   ->andWhere('YEARMONTH(c.date) >= :dtsart')
		   ->setParameter('dtsart', date('Ym',strtotime($dStart)))
		   ->groupBy('c.date')
		   ->orderBy('c.date');
                 
        return $qb->getQuery()->getArrayResult();
    }
}
